generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String        @id @default(dbgenerated("concat('usr_', replace((gen_random_uuid())::text, '-'::text, ''::text))"))
  firstName              String
  lastName               String
  email                  String        @unique
  password               String
  avatar                 String?
  role                   UserRole      @default(User)
  accounts               Account[]
  transactions           Transaction[]
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  sessions               Session[]
  resetPasswordToken     String?       @unique
  resetPasswordExpires   DateTime?
  isEmailVerified        Boolean       @default(false)
  emailVerificationToken String?       @unique
}

model Account {
  id           String        @id @default(uuid())
  accountType  AccountType
  balance      Float         @default(0)
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  entityName   String
  logo         String?
  currency     Currency
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id         String   @id @default(uuid())
  accountId  String
  account    Account  @relation(fields: [accountId], references: [id])
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  amount     Float
  entityName String
  logo       String?
  type       Type     @default(Debit)
  method     Method   @default(Debit)
  category   Category @default(Other)
  date       DateTime @default(now())
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

enum UserRole {
  Admin
  User
}

enum Currency {
  USD
  ARS
  EUR
  NZD
}

enum AccountType {
  Checking
  Savings
  CreditCard
}

enum Category {
  Housing
  Transportation
  Food
  Entertainment
  Utilities
  Insurance
  Healthcare
  DebtRepayment
  Savings
  Investments
  Taxes
  Salary
  FreelanceContractWork
  RentalIncome
  Gifts
  Other
}

enum Method {
  Debit
  Credit
  Cash
}

enum Type {
  Debit
  Credit
}
